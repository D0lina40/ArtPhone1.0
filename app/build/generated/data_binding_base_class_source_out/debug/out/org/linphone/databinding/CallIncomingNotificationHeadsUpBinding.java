// Generated by view binder compiler. Do not edit!
package org.linphone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.linphone.R;

public final class CallIncomingNotificationHeadsUpBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView caller;

  @NonNull
  public final ImageView callerPicture;

  @NonNull
  public final TextView incomingCallInfo;

  @NonNull
  public final TextView sipUri;

  private CallIncomingNotificationHeadsUpBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView caller, @NonNull ImageView callerPicture,
      @NonNull TextView incomingCallInfo, @NonNull TextView sipUri) {
    this.rootView = rootView;
    this.caller = caller;
    this.callerPicture = callerPicture;
    this.incomingCallInfo = incomingCallInfo;
    this.sipUri = sipUri;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static CallIncomingNotificationHeadsUpBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CallIncomingNotificationHeadsUpBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.call_incoming_notification_heads_up, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CallIncomingNotificationHeadsUpBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.caller;
      TextView caller = ViewBindings.findChildViewById(rootView, id);
      if (caller == null) {
        break missingId;
      }

      id = R.id.caller_picture;
      ImageView callerPicture = ViewBindings.findChildViewById(rootView, id);
      if (callerPicture == null) {
        break missingId;
      }

      id = R.id.incoming_call_info;
      TextView incomingCallInfo = ViewBindings.findChildViewById(rootView, id);
      if (incomingCallInfo == null) {
        break missingId;
      }

      id = R.id.sip_uri;
      TextView sipUri = ViewBindings.findChildViewById(rootView, id);
      if (sipUri == null) {
        break missingId;
      }

      return new CallIncomingNotificationHeadsUpBinding((RelativeLayout) rootView, caller,
          callerPicture, incomingCallInfo, sipUri);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
