// Generated by data binding compiler. Do not edit!
package org.linphone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import org.linphone.R;
import org.linphone.activities.main.chat.data.ChatRoomData;
import org.linphone.activities.main.viewmodels.ListTopBarViewModel;

public abstract class ChatRoomListCellBinding extends ViewDataBinding {
  @NonNull
  public final ImageView avatar;

  @NonNull
  public final TextView date;

  @NonNull
  public final Barrier endBarrier;

  @NonNull
  public final Barrier endBarrier2;

  @NonNull
  public final Barrier endBarrier3;

  @NonNull
  public final ImageView ephemeral;

  @NonNull
  public final ImageView forward;

  @NonNull
  public final ImageView imdn;

  @NonNull
  public final TextView lastMessage;

  @NonNull
  public final ImageView muted;

  @NonNull
  public final ImageView securityLevel;

  @NonNull
  public final CheckBox select;

  @NonNull
  public final TextView title;

  @NonNull
  public final TextView unread;

  @Bindable
  protected View.OnClickListener mClickListener;

  @Bindable
  protected View.OnLongClickListener mLongClickListener;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected Boolean mForwardPending;

  @Bindable
  protected ChatRoomData mData;

  @Bindable
  protected ListTopBarViewModel mSelectionListViewModel;

  protected ChatRoomListCellBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView avatar, TextView date, Barrier endBarrier, Barrier endBarrier2, Barrier endBarrier3,
      ImageView ephemeral, ImageView forward, ImageView imdn, TextView lastMessage, ImageView muted,
      ImageView securityLevel, CheckBox select, TextView title, TextView unread) {
    super(_bindingComponent, _root, _localFieldCount);
    this.avatar = avatar;
    this.date = date;
    this.endBarrier = endBarrier;
    this.endBarrier2 = endBarrier2;
    this.endBarrier3 = endBarrier3;
    this.ephemeral = ephemeral;
    this.forward = forward;
    this.imdn = imdn;
    this.lastMessage = lastMessage;
    this.muted = muted;
    this.securityLevel = securityLevel;
    this.select = select;
    this.title = title;
    this.unread = unread;
  }

  public abstract void setClickListener(@Nullable View.OnClickListener clickListener);

  @Nullable
  public View.OnClickListener getClickListener() {
    return mClickListener;
  }

  public abstract void setLongClickListener(@Nullable View.OnLongClickListener longClickListener);

  @Nullable
  public View.OnLongClickListener getLongClickListener() {
    return mLongClickListener;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setForwardPending(@Nullable Boolean forwardPending);

  @Nullable
  public Boolean getForwardPending() {
    return mForwardPending;
  }

  public abstract void setData(@Nullable ChatRoomData data);

  @Nullable
  public ChatRoomData getData() {
    return mData;
  }

  public abstract void setSelectionListViewModel(
      @Nullable ListTopBarViewModel selectionListViewModel);

  @Nullable
  public ListTopBarViewModel getSelectionListViewModel() {
    return mSelectionListViewModel;
  }

  @NonNull
  public static ChatRoomListCellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.chat_room_list_cell, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ChatRoomListCellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ChatRoomListCellBinding>inflateInternal(inflater, R.layout.chat_room_list_cell, root, attachToRoot, component);
  }

  @NonNull
  public static ChatRoomListCellBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.chat_room_list_cell, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ChatRoomListCellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ChatRoomListCellBinding>inflateInternal(inflater, R.layout.chat_room_list_cell, null, false, component);
  }

  public static ChatRoomListCellBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ChatRoomListCellBinding bind(@NonNull View view, @Nullable Object component) {
    return (ChatRoomListCellBinding)bind(component, view, R.layout.chat_room_list_cell);
  }
}
