// Generated by data binding compiler. Do not edit!
package org.linphone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import org.linphone.R;
import org.linphone.activities.main.conference.viewmodels.ConferenceWaitingRoomViewModel;
import org.linphone.activities.voip.views.RoundCornersTextureView;

public abstract class ConferenceWaitingRoomFragmentBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout buttons;

  @NonNull
  public final TextView cancel;

  @NonNull
  public final ConstraintLayout conferenceControls;

  @NonNull
  public final TextView conferenceSubject;

  @NonNull
  public final RoundCornersTextureView localPreviewVideoSurface;

  @NonNull
  public final RelativeLayout speaker;

  @NonNull
  public final TextView start;

  @Bindable
  protected ConferenceWaitingRoomViewModel mViewModel;

  protected ConferenceWaitingRoomFragmentBinding(Object _bindingComponent, View _root,
      int _localFieldCount, ConstraintLayout buttons, TextView cancel,
      ConstraintLayout conferenceControls, TextView conferenceSubject,
      RoundCornersTextureView localPreviewVideoSurface, RelativeLayout speaker, TextView start) {
    super(_bindingComponent, _root, _localFieldCount);
    this.buttons = buttons;
    this.cancel = cancel;
    this.conferenceControls = conferenceControls;
    this.conferenceSubject = conferenceSubject;
    this.localPreviewVideoSurface = localPreviewVideoSurface;
    this.speaker = speaker;
    this.start = start;
  }

  public abstract void setViewModel(@Nullable ConferenceWaitingRoomViewModel viewModel);

  @Nullable
  public ConferenceWaitingRoomViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ConferenceWaitingRoomFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.conference_waiting_room_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ConferenceWaitingRoomFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ConferenceWaitingRoomFragmentBinding>inflateInternal(inflater, R.layout.conference_waiting_room_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static ConferenceWaitingRoomFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.conference_waiting_room_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ConferenceWaitingRoomFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ConferenceWaitingRoomFragmentBinding>inflateInternal(inflater, R.layout.conference_waiting_room_fragment, null, false, component);
  }

  public static ConferenceWaitingRoomFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ConferenceWaitingRoomFragmentBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ConferenceWaitingRoomFragmentBinding)bind(component, view, R.layout.conference_waiting_room_fragment);
  }
}
