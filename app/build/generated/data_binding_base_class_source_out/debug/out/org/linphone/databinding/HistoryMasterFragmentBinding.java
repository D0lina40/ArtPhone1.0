// Generated by data binding compiler. Do not edit!
package org.linphone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import androidx.fragment.app.FragmentContainerView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.slidingpanelayout.widget.SlidingPaneLayout;
import java.lang.Deprecated;
import java.lang.Object;
import org.linphone.R;
import org.linphone.activities.main.history.viewmodels.CallLogsListViewModel;

public abstract class HistoryMasterFragmentBinding extends ViewDataBinding {
  @NonNull
  public final RecyclerView callLogsList;

  @NonNull
  public final FragmentContainerView historyNavContainer;

  @NonNull
  public final FragmentContainerView listEditTopBarFragment;

  @NonNull
  public final SlidingPaneLayout slidingPane;

  @NonNull
  public final LinearLayout topBar;

  @Bindable
  protected View.OnClickListener mEditClickListener;

  @Bindable
  protected CallLogsListViewModel mViewModel;

  protected HistoryMasterFragmentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      RecyclerView callLogsList, FragmentContainerView historyNavContainer,
      FragmentContainerView listEditTopBarFragment, SlidingPaneLayout slidingPane,
      LinearLayout topBar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.callLogsList = callLogsList;
    this.historyNavContainer = historyNavContainer;
    this.listEditTopBarFragment = listEditTopBarFragment;
    this.slidingPane = slidingPane;
    this.topBar = topBar;
  }

  public abstract void setEditClickListener(@Nullable View.OnClickListener editClickListener);

  @Nullable
  public View.OnClickListener getEditClickListener() {
    return mEditClickListener;
  }

  public abstract void setViewModel(@Nullable CallLogsListViewModel viewModel);

  @Nullable
  public CallLogsListViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static HistoryMasterFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.history_master_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static HistoryMasterFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<HistoryMasterFragmentBinding>inflateInternal(inflater, R.layout.history_master_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static HistoryMasterFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.history_master_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static HistoryMasterFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<HistoryMasterFragmentBinding>inflateInternal(inflater, R.layout.history_master_fragment, null, false, component);
  }

  public static HistoryMasterFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static HistoryMasterFragmentBinding bind(@NonNull View view, @Nullable Object component) {
    return (HistoryMasterFragmentBinding)bind(component, view, R.layout.history_master_fragment);
  }
}
