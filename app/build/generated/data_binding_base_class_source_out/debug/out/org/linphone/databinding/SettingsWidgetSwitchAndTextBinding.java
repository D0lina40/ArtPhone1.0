// Generated by data binding compiler. Do not edit!
package org.linphone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.Deprecated;
import java.lang.Object;
import org.linphone.R;
import org.linphone.activities.main.settings.SettingListener;

public abstract class SettingsWidgetSwitchAndTextBinding extends ViewDataBinding {
  @NonNull
  public final SwitchMaterial settingSwitch;

  @NonNull
  public final TextInputEditText settingsInput;

  @NonNull
  public final TextInputLayout settingsInputLayout;

  @NonNull
  public final TextView settingsSubtitle;

  @NonNull
  public final TextView settingsTitle;

  @Bindable
  protected String mSwitchTitle;

  @Bindable
  protected String mSwitchSubtitle;

  @Bindable
  protected String mTextTitle;

  @Bindable
  protected String mTextSubtitle;

  @Bindable
  protected String mDefaultValue;

  @Bindable
  protected Boolean mChecked;

  @Bindable
  protected Boolean mEnabled;

  @Bindable
  protected SettingListener mListener;

  protected SettingsWidgetSwitchAndTextBinding(Object _bindingComponent, View _root,
      int _localFieldCount, SwitchMaterial settingSwitch, TextInputEditText settingsInput,
      TextInputLayout settingsInputLayout, TextView settingsSubtitle, TextView settingsTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.settingSwitch = settingSwitch;
    this.settingsInput = settingsInput;
    this.settingsInputLayout = settingsInputLayout;
    this.settingsSubtitle = settingsSubtitle;
    this.settingsTitle = settingsTitle;
  }

  public abstract void setSwitchTitle(@Nullable String switch_title);

  @Nullable
  public String getSwitchTitle() {
    return mSwitchTitle;
  }

  public abstract void setSwitchSubtitle(@Nullable String switch_subtitle);

  @Nullable
  public String getSwitchSubtitle() {
    return mSwitchSubtitle;
  }

  public abstract void setTextTitle(@Nullable String text_title);

  @Nullable
  public String getTextTitle() {
    return mTextTitle;
  }

  public abstract void setTextSubtitle(@Nullable String text_subtitle);

  @Nullable
  public String getTextSubtitle() {
    return mTextSubtitle;
  }

  public abstract void setDefaultValue(@Nullable String defaultValue);

  @Nullable
  public String getDefaultValue() {
    return mDefaultValue;
  }

  public abstract void setChecked(@Nullable Boolean checked);

  @Nullable
  public Boolean getChecked() {
    return mChecked;
  }

  public abstract void setEnabled(@Nullable Boolean enabled);

  @Nullable
  public Boolean getEnabled() {
    return mEnabled;
  }

  public abstract void setListener(@Nullable SettingListener listener);

  @Nullable
  public SettingListener getListener() {
    return mListener;
  }

  @NonNull
  public static SettingsWidgetSwitchAndTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.settings_widget_switch_and_text, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SettingsWidgetSwitchAndTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SettingsWidgetSwitchAndTextBinding>inflateInternal(inflater, R.layout.settings_widget_switch_and_text, root, attachToRoot, component);
  }

  @NonNull
  public static SettingsWidgetSwitchAndTextBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.settings_widget_switch_and_text, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SettingsWidgetSwitchAndTextBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SettingsWidgetSwitchAndTextBinding>inflateInternal(inflater, R.layout.settings_widget_switch_and_text, null, false, component);
  }

  public static SettingsWidgetSwitchAndTextBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SettingsWidgetSwitchAndTextBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SettingsWidgetSwitchAndTextBinding)bind(component, view, R.layout.settings_widget_switch_and_text);
  }
}
