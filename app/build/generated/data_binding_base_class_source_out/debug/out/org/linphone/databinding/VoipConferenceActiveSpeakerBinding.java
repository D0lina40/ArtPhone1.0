// Generated by data binding compiler. Do not edit!
package org.linphone.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Group;
import androidx.constraintlayout.widget.Guideline;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.flexbox.FlexboxLayout;
import java.lang.Deprecated;
import java.lang.Object;
import org.linphone.R;
import org.linphone.activities.voip.viewmodels.ConferenceViewModel;
import org.linphone.activities.voip.viewmodels.ControlsViewModel;
import org.linphone.activities.voip.views.RoundCornersTextureView;
import org.linphone.activities.voip.views.ScrollDotsView;

public abstract class VoipConferenceActiveSpeakerBinding extends ViewDataBinding {
  @NonNull
  public final Chronometer activeConferenceTimer;

  @NonNull
  public final View activeSpeakerBackground;

  @NonNull
  public final ImageView activeSpeakerMuted;

  @NonNull
  public final RoundCornersTextureView conferenceActiveSpeakerRemoteVideo;

  @NonNull
  public final ConstraintLayout conferenceConstraintLayout;

  @NonNull
  public final FlexboxLayout flexboxLayout;

  @NonNull
  public final Group group;

  @NonNull
  public final Guideline hingeBottom;

  @NonNull
  public final Guideline hingeTop;

  @NonNull
  public final ImageView localParticipantAvatar;

  @NonNull
  public final View localParticipantBackground;

  @NonNull
  public final ImageView localParticipantMuted;

  @NonNull
  public final TextView localParticipantName;

  @NonNull
  public final ImageView localParticipantPaused;

  @NonNull
  public final ImageView localParticipantSpeakingBorder;

  @NonNull
  public final RoundCornersTextureView localPreviewVideoSurface;

  @NonNull
  public final View miniatures;

  @NonNull
  public final TextView remoteName;

  @NonNull
  public final VoipRemoteRecordingBinding remoteRecording;

  @NonNull
  public final ScrollDotsView scrollIndicator;

  @NonNull
  public final ImageView speakingParticipantAvatar;

  @NonNull
  public final ProgressBar speakingParticipantJoining;

  @NonNull
  public final TextView speakingParticipantName;

  @NonNull
  public final ImageView speakingParticipantPaused;

  @NonNull
  public final ImageView switchCamera;

  @NonNull
  public final ImageView toggleConferenceRecording;

  @NonNull
  public final ImageView togglePauseConference;

  @NonNull
  public final View topBarrier;

  @Bindable
  protected ConferenceViewModel mConferenceViewModel;

  @Bindable
  protected ControlsViewModel mControlsViewModel;

  @Bindable
  protected Integer mInflatedVisibility;

  protected VoipConferenceActiveSpeakerBinding(Object _bindingComponent, View _root,
      int _localFieldCount, Chronometer activeConferenceTimer, View activeSpeakerBackground,
      ImageView activeSpeakerMuted, RoundCornersTextureView conferenceActiveSpeakerRemoteVideo,
      ConstraintLayout conferenceConstraintLayout, FlexboxLayout flexboxLayout, Group group,
      Guideline hingeBottom, Guideline hingeTop, ImageView localParticipantAvatar,
      View localParticipantBackground, ImageView localParticipantMuted,
      TextView localParticipantName, ImageView localParticipantPaused,
      ImageView localParticipantSpeakingBorder, RoundCornersTextureView localPreviewVideoSurface,
      View miniatures, TextView remoteName, VoipRemoteRecordingBinding remoteRecording,
      ScrollDotsView scrollIndicator, ImageView speakingParticipantAvatar,
      ProgressBar speakingParticipantJoining, TextView speakingParticipantName,
      ImageView speakingParticipantPaused, ImageView switchCamera,
      ImageView toggleConferenceRecording, ImageView togglePauseConference, View topBarrier) {
    super(_bindingComponent, _root, _localFieldCount);
    this.activeConferenceTimer = activeConferenceTimer;
    this.activeSpeakerBackground = activeSpeakerBackground;
    this.activeSpeakerMuted = activeSpeakerMuted;
    this.conferenceActiveSpeakerRemoteVideo = conferenceActiveSpeakerRemoteVideo;
    this.conferenceConstraintLayout = conferenceConstraintLayout;
    this.flexboxLayout = flexboxLayout;
    this.group = group;
    this.hingeBottom = hingeBottom;
    this.hingeTop = hingeTop;
    this.localParticipantAvatar = localParticipantAvatar;
    this.localParticipantBackground = localParticipantBackground;
    this.localParticipantMuted = localParticipantMuted;
    this.localParticipantName = localParticipantName;
    this.localParticipantPaused = localParticipantPaused;
    this.localParticipantSpeakingBorder = localParticipantSpeakingBorder;
    this.localPreviewVideoSurface = localPreviewVideoSurface;
    this.miniatures = miniatures;
    this.remoteName = remoteName;
    this.remoteRecording = remoteRecording;
    this.scrollIndicator = scrollIndicator;
    this.speakingParticipantAvatar = speakingParticipantAvatar;
    this.speakingParticipantJoining = speakingParticipantJoining;
    this.speakingParticipantName = speakingParticipantName;
    this.speakingParticipantPaused = speakingParticipantPaused;
    this.switchCamera = switchCamera;
    this.toggleConferenceRecording = toggleConferenceRecording;
    this.togglePauseConference = togglePauseConference;
    this.topBarrier = topBarrier;
  }

  public abstract void setConferenceViewModel(@Nullable ConferenceViewModel conferenceViewModel);

  @Nullable
  public ConferenceViewModel getConferenceViewModel() {
    return mConferenceViewModel;
  }

  public abstract void setControlsViewModel(@Nullable ControlsViewModel controlsViewModel);

  @Nullable
  public ControlsViewModel getControlsViewModel() {
    return mControlsViewModel;
  }

  public abstract void setInflatedVisibility(@Nullable Integer inflatedVisibility);

  @Nullable
  public Integer getInflatedVisibility() {
    return mInflatedVisibility;
  }

  @NonNull
  public static VoipConferenceActiveSpeakerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.voip_conference_active_speaker, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static VoipConferenceActiveSpeakerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<VoipConferenceActiveSpeakerBinding>inflateInternal(inflater, R.layout.voip_conference_active_speaker, root, attachToRoot, component);
  }

  @NonNull
  public static VoipConferenceActiveSpeakerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.voip_conference_active_speaker, null, false, component)
   */
  @NonNull
  @Deprecated
  public static VoipConferenceActiveSpeakerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<VoipConferenceActiveSpeakerBinding>inflateInternal(inflater, R.layout.voip_conference_active_speaker, null, false, component);
  }

  public static VoipConferenceActiveSpeakerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static VoipConferenceActiveSpeakerBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (VoipConferenceActiveSpeakerBinding)bind(component, view, R.layout.voip_conference_active_speaker);
  }
}
